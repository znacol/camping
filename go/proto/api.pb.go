// Code generated by protoc-gen-go. DO NOT EDIT.
// source: go/proto/api.proto

package camping

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Site struct {
	Id                   uint64   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Latitude             float32  `protobuf:"fixed32,2,opt,name=latitude,proto3" json:"latitude,omitempty"`
	Longitude            float32  `protobuf:"fixed32,3,opt,name=longitude,proto3" json:"longitude,omitempty"`
	NationalForestId     uint64   `protobuf:"varint,4,opt,name=national_forest_id,json=nationalForestId,proto3" json:"national_forest_id,omitempty"`
	DistrictId           uint64   `protobuf:"varint,5,opt,name=district_id,json=districtId,proto3" json:"district_id,omitempty"`
	Altitude             uint64   `protobuf:"varint,6,opt,name=altitude,proto3" json:"altitude,omitempty"`
	Notes                string   `protobuf:"bytes,7,opt,name=notes,proto3" json:"notes,omitempty"`
	CreatedAt            string   `protobuf:"bytes,8,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Site) Reset()         { *m = Site{} }
func (m *Site) String() string { return proto.CompactTextString(m) }
func (*Site) ProtoMessage()    {}
func (*Site) Descriptor() ([]byte, []int) {
	return fileDescriptor_3ffbb4dcaaeb0d44, []int{0}
}

func (m *Site) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Site.Unmarshal(m, b)
}
func (m *Site) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Site.Marshal(b, m, deterministic)
}
func (m *Site) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Site.Merge(m, src)
}
func (m *Site) XXX_Size() int {
	return xxx_messageInfo_Site.Size(m)
}
func (m *Site) XXX_DiscardUnknown() {
	xxx_messageInfo_Site.DiscardUnknown(m)
}

var xxx_messageInfo_Site proto.InternalMessageInfo

func (m *Site) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Site) GetLatitude() float32 {
	if m != nil {
		return m.Latitude
	}
	return 0
}

func (m *Site) GetLongitude() float32 {
	if m != nil {
		return m.Longitude
	}
	return 0
}

func (m *Site) GetNationalForestId() uint64 {
	if m != nil {
		return m.NationalForestId
	}
	return 0
}

func (m *Site) GetDistrictId() uint64 {
	if m != nil {
		return m.DistrictId
	}
	return 0
}

func (m *Site) GetAltitude() uint64 {
	if m != nil {
		return m.Altitude
	}
	return 0
}

func (m *Site) GetNotes() string {
	if m != nil {
		return m.Notes
	}
	return ""
}

func (m *Site) GetCreatedAt() string {
	if m != nil {
		return m.CreatedAt
	}
	return ""
}

type NationalForest struct {
	Id                   uint64   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Website              string   `protobuf:"bytes,3,opt,name=website,proto3" json:"website,omitempty"`
	CreatedAt            string   `protobuf:"bytes,4,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NationalForest) Reset()         { *m = NationalForest{} }
func (m *NationalForest) String() string { return proto.CompactTextString(m) }
func (*NationalForest) ProtoMessage()    {}
func (*NationalForest) Descriptor() ([]byte, []int) {
	return fileDescriptor_3ffbb4dcaaeb0d44, []int{1}
}

func (m *NationalForest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NationalForest.Unmarshal(m, b)
}
func (m *NationalForest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NationalForest.Marshal(b, m, deterministic)
}
func (m *NationalForest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NationalForest.Merge(m, src)
}
func (m *NationalForest) XXX_Size() int {
	return xxx_messageInfo_NationalForest.Size(m)
}
func (m *NationalForest) XXX_DiscardUnknown() {
	xxx_messageInfo_NationalForest.DiscardUnknown(m)
}

var xxx_messageInfo_NationalForest proto.InternalMessageInfo

func (m *NationalForest) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *NationalForest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *NationalForest) GetWebsite() string {
	if m != nil {
		return m.Website
	}
	return ""
}

func (m *NationalForest) GetCreatedAt() string {
	if m != nil {
		return m.CreatedAt
	}
	return ""
}

type District struct {
	Id                   uint64   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	NationalForestId     uint64   `protobuf:"varint,2,opt,name=national_forest_id,json=nationalForestId,proto3" json:"national_forest_id,omitempty"`
	Name                 string   `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	MapLocation          string   `protobuf:"bytes,4,opt,name=map_location,json=mapLocation,proto3" json:"map_location,omitempty"`
	CreatedAt            string   `protobuf:"bytes,5,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *District) Reset()         { *m = District{} }
func (m *District) String() string { return proto.CompactTextString(m) }
func (*District) ProtoMessage()    {}
func (*District) Descriptor() ([]byte, []int) {
	return fileDescriptor_3ffbb4dcaaeb0d44, []int{2}
}

func (m *District) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_District.Unmarshal(m, b)
}
func (m *District) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_District.Marshal(b, m, deterministic)
}
func (m *District) XXX_Merge(src proto.Message) {
	xxx_messageInfo_District.Merge(m, src)
}
func (m *District) XXX_Size() int {
	return xxx_messageInfo_District.Size(m)
}
func (m *District) XXX_DiscardUnknown() {
	xxx_messageInfo_District.DiscardUnknown(m)
}

var xxx_messageInfo_District proto.InternalMessageInfo

func (m *District) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *District) GetNationalForestId() uint64 {
	if m != nil {
		return m.NationalForestId
	}
	return 0
}

func (m *District) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *District) GetMapLocation() string {
	if m != nil {
		return m.MapLocation
	}
	return ""
}

func (m *District) GetCreatedAt() string {
	if m != nil {
		return m.CreatedAt
	}
	return ""
}

type SitesGetRequest struct {
	Id                   uint64   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SitesGetRequest) Reset()         { *m = SitesGetRequest{} }
func (m *SitesGetRequest) String() string { return proto.CompactTextString(m) }
func (*SitesGetRequest) ProtoMessage()    {}
func (*SitesGetRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_3ffbb4dcaaeb0d44, []int{3}
}

func (m *SitesGetRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SitesGetRequest.Unmarshal(m, b)
}
func (m *SitesGetRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SitesGetRequest.Marshal(b, m, deterministic)
}
func (m *SitesGetRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SitesGetRequest.Merge(m, src)
}
func (m *SitesGetRequest) XXX_Size() int {
	return xxx_messageInfo_SitesGetRequest.Size(m)
}
func (m *SitesGetRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SitesGetRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SitesGetRequest proto.InternalMessageInfo

func (m *SitesGetRequest) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type SitesGetResponse struct {
	Sites                []*Site  `protobuf:"bytes,1,rep,name=sites,proto3" json:"sites,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SitesGetResponse) Reset()         { *m = SitesGetResponse{} }
func (m *SitesGetResponse) String() string { return proto.CompactTextString(m) }
func (*SitesGetResponse) ProtoMessage()    {}
func (*SitesGetResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3ffbb4dcaaeb0d44, []int{4}
}

func (m *SitesGetResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SitesGetResponse.Unmarshal(m, b)
}
func (m *SitesGetResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SitesGetResponse.Marshal(b, m, deterministic)
}
func (m *SitesGetResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SitesGetResponse.Merge(m, src)
}
func (m *SitesGetResponse) XXX_Size() int {
	return xxx_messageInfo_SitesGetResponse.Size(m)
}
func (m *SitesGetResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SitesGetResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SitesGetResponse proto.InternalMessageInfo

func (m *SitesGetResponse) GetSites() []*Site {
	if m != nil {
		return m.Sites
	}
	return nil
}

type SiteUpsertRequest struct {
	Latitude             float32  `protobuf:"fixed32,1,opt,name=latitude,proto3" json:"latitude,omitempty"`
	Longitude            float32  `protobuf:"fixed32,2,opt,name=longitude,proto3" json:"longitude,omitempty"`
	NationalForestId     uint64   `protobuf:"varint,3,opt,name=national_forest_id,json=nationalForestId,proto3" json:"national_forest_id,omitempty"`
	DistrictId           uint64   `protobuf:"varint,4,opt,name=district_id,json=districtId,proto3" json:"district_id,omitempty"`
	Altitude             uint64   `protobuf:"varint,5,opt,name=altitude,proto3" json:"altitude,omitempty"`
	Notes                string   `protobuf:"bytes,6,opt,name=notes,proto3" json:"notes,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SiteUpsertRequest) Reset()         { *m = SiteUpsertRequest{} }
func (m *SiteUpsertRequest) String() string { return proto.CompactTextString(m) }
func (*SiteUpsertRequest) ProtoMessage()    {}
func (*SiteUpsertRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_3ffbb4dcaaeb0d44, []int{5}
}

func (m *SiteUpsertRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SiteUpsertRequest.Unmarshal(m, b)
}
func (m *SiteUpsertRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SiteUpsertRequest.Marshal(b, m, deterministic)
}
func (m *SiteUpsertRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SiteUpsertRequest.Merge(m, src)
}
func (m *SiteUpsertRequest) XXX_Size() int {
	return xxx_messageInfo_SiteUpsertRequest.Size(m)
}
func (m *SiteUpsertRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SiteUpsertRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SiteUpsertRequest proto.InternalMessageInfo

func (m *SiteUpsertRequest) GetLatitude() float32 {
	if m != nil {
		return m.Latitude
	}
	return 0
}

func (m *SiteUpsertRequest) GetLongitude() float32 {
	if m != nil {
		return m.Longitude
	}
	return 0
}

func (m *SiteUpsertRequest) GetNationalForestId() uint64 {
	if m != nil {
		return m.NationalForestId
	}
	return 0
}

func (m *SiteUpsertRequest) GetDistrictId() uint64 {
	if m != nil {
		return m.DistrictId
	}
	return 0
}

func (m *SiteUpsertRequest) GetAltitude() uint64 {
	if m != nil {
		return m.Altitude
	}
	return 0
}

func (m *SiteUpsertRequest) GetNotes() string {
	if m != nil {
		return m.Notes
	}
	return ""
}

type SiteUpsertResponse struct {
	Site                 *Site    `protobuf:"bytes,1,opt,name=site,proto3" json:"site,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SiteUpsertResponse) Reset()         { *m = SiteUpsertResponse{} }
func (m *SiteUpsertResponse) String() string { return proto.CompactTextString(m) }
func (*SiteUpsertResponse) ProtoMessage()    {}
func (*SiteUpsertResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3ffbb4dcaaeb0d44, []int{6}
}

func (m *SiteUpsertResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SiteUpsertResponse.Unmarshal(m, b)
}
func (m *SiteUpsertResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SiteUpsertResponse.Marshal(b, m, deterministic)
}
func (m *SiteUpsertResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SiteUpsertResponse.Merge(m, src)
}
func (m *SiteUpsertResponse) XXX_Size() int {
	return xxx_messageInfo_SiteUpsertResponse.Size(m)
}
func (m *SiteUpsertResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SiteUpsertResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SiteUpsertResponse proto.InternalMessageInfo

func (m *SiteUpsertResponse) GetSite() *Site {
	if m != nil {
		return m.Site
	}
	return nil
}

type NationalForestsGetRequest struct {
	Id                   uint64   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NationalForestsGetRequest) Reset()         { *m = NationalForestsGetRequest{} }
func (m *NationalForestsGetRequest) String() string { return proto.CompactTextString(m) }
func (*NationalForestsGetRequest) ProtoMessage()    {}
func (*NationalForestsGetRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_3ffbb4dcaaeb0d44, []int{7}
}

func (m *NationalForestsGetRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NationalForestsGetRequest.Unmarshal(m, b)
}
func (m *NationalForestsGetRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NationalForestsGetRequest.Marshal(b, m, deterministic)
}
func (m *NationalForestsGetRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NationalForestsGetRequest.Merge(m, src)
}
func (m *NationalForestsGetRequest) XXX_Size() int {
	return xxx_messageInfo_NationalForestsGetRequest.Size(m)
}
func (m *NationalForestsGetRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_NationalForestsGetRequest.DiscardUnknown(m)
}

var xxx_messageInfo_NationalForestsGetRequest proto.InternalMessageInfo

func (m *NationalForestsGetRequest) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type NationalForestsGetResponse struct {
	Forests              []*NationalForest `protobuf:"bytes,1,rep,name=forests,proto3" json:"forests,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *NationalForestsGetResponse) Reset()         { *m = NationalForestsGetResponse{} }
func (m *NationalForestsGetResponse) String() string { return proto.CompactTextString(m) }
func (*NationalForestsGetResponse) ProtoMessage()    {}
func (*NationalForestsGetResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3ffbb4dcaaeb0d44, []int{8}
}

func (m *NationalForestsGetResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NationalForestsGetResponse.Unmarshal(m, b)
}
func (m *NationalForestsGetResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NationalForestsGetResponse.Marshal(b, m, deterministic)
}
func (m *NationalForestsGetResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NationalForestsGetResponse.Merge(m, src)
}
func (m *NationalForestsGetResponse) XXX_Size() int {
	return xxx_messageInfo_NationalForestsGetResponse.Size(m)
}
func (m *NationalForestsGetResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_NationalForestsGetResponse.DiscardUnknown(m)
}

var xxx_messageInfo_NationalForestsGetResponse proto.InternalMessageInfo

func (m *NationalForestsGetResponse) GetForests() []*NationalForest {
	if m != nil {
		return m.Forests
	}
	return nil
}

type DistrictsGetRequest struct {
	Id                   uint64   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DistrictsGetRequest) Reset()         { *m = DistrictsGetRequest{} }
func (m *DistrictsGetRequest) String() string { return proto.CompactTextString(m) }
func (*DistrictsGetRequest) ProtoMessage()    {}
func (*DistrictsGetRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_3ffbb4dcaaeb0d44, []int{9}
}

func (m *DistrictsGetRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DistrictsGetRequest.Unmarshal(m, b)
}
func (m *DistrictsGetRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DistrictsGetRequest.Marshal(b, m, deterministic)
}
func (m *DistrictsGetRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DistrictsGetRequest.Merge(m, src)
}
func (m *DistrictsGetRequest) XXX_Size() int {
	return xxx_messageInfo_DistrictsGetRequest.Size(m)
}
func (m *DistrictsGetRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DistrictsGetRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DistrictsGetRequest proto.InternalMessageInfo

func (m *DistrictsGetRequest) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type DistrictsGetResponse struct {
	Districts            []*District `protobuf:"bytes,1,rep,name=districts,proto3" json:"districts,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *DistrictsGetResponse) Reset()         { *m = DistrictsGetResponse{} }
func (m *DistrictsGetResponse) String() string { return proto.CompactTextString(m) }
func (*DistrictsGetResponse) ProtoMessage()    {}
func (*DistrictsGetResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3ffbb4dcaaeb0d44, []int{10}
}

func (m *DistrictsGetResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DistrictsGetResponse.Unmarshal(m, b)
}
func (m *DistrictsGetResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DistrictsGetResponse.Marshal(b, m, deterministic)
}
func (m *DistrictsGetResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DistrictsGetResponse.Merge(m, src)
}
func (m *DistrictsGetResponse) XXX_Size() int {
	return xxx_messageInfo_DistrictsGetResponse.Size(m)
}
func (m *DistrictsGetResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DistrictsGetResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DistrictsGetResponse proto.InternalMessageInfo

func (m *DistrictsGetResponse) GetDistricts() []*District {
	if m != nil {
		return m.Districts
	}
	return nil
}

func init() {
	proto.RegisterType((*Site)(nil), "camping.Site")
	proto.RegisterType((*NationalForest)(nil), "camping.NationalForest")
	proto.RegisterType((*District)(nil), "camping.District")
	proto.RegisterType((*SitesGetRequest)(nil), "camping.SitesGetRequest")
	proto.RegisterType((*SitesGetResponse)(nil), "camping.SitesGetResponse")
	proto.RegisterType((*SiteUpsertRequest)(nil), "camping.SiteUpsertRequest")
	proto.RegisterType((*SiteUpsertResponse)(nil), "camping.SiteUpsertResponse")
	proto.RegisterType((*NationalForestsGetRequest)(nil), "camping.NationalForestsGetRequest")
	proto.RegisterType((*NationalForestsGetResponse)(nil), "camping.NationalForestsGetResponse")
	proto.RegisterType((*DistrictsGetRequest)(nil), "camping.DistrictsGetRequest")
	proto.RegisterType((*DistrictsGetResponse)(nil), "camping.DistrictsGetResponse")
}

func init() { proto.RegisterFile("go/proto/api.proto", fileDescriptor_3ffbb4dcaaeb0d44) }

var fileDescriptor_3ffbb4dcaaeb0d44 = []byte{
	// 637 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x55, 0x4d, 0x6f, 0xd3, 0x40,
	0x10, 0xd5, 0x3a, 0x4e, 0x93, 0x4c, 0x4b, 0x69, 0xa7, 0xa5, 0xb8, 0x26, 0x15, 0xa9, 0x2b, 0xa4,
	0x88, 0x8f, 0x5a, 0x6d, 0x85, 0x2a, 0xc1, 0x09, 0x81, 0xa8, 0x2a, 0x21, 0x90, 0x5c, 0x71, 0xc9,
	0x25, 0xda, 0xc6, 0x4b, 0xb4, 0x52, 0xe2, 0x35, 0xf6, 0xb6, 0x1c, 0x10, 0x17, 0x4e, 0xdc, 0x38,
	0x20, 0x71, 0xe4, 0x27, 0x71, 0xe1, 0x2f, 0xf0, 0x03, 0xf8, 0x09, 0xc8, 0xeb, 0xb5, 0x63, 0xc7,
	0x4e, 0xd4, 0x5b, 0x66, 0xde, 0xf3, 0xbe, 0x37, 0x33, 0x4f, 0x0a, 0xe0, 0x58, 0xb8, 0x61, 0x24,
	0xa4, 0x70, 0x69, 0xc8, 0x0f, 0xd5, 0x2f, 0x6c, 0x8d, 0xe8, 0x34, 0xe4, 0xc1, 0xd8, 0xee, 0x8e,
	0x85, 0x18, 0x4f, 0x58, 0x02, 0xb9, 0x34, 0x08, 0x84, 0xa4, 0x92, 0x8b, 0x20, 0x4e, 0x69, 0xce,
	0x3f, 0x02, 0xe6, 0x05, 0x97, 0x0c, 0xd7, 0xc1, 0xe0, 0xbe, 0x45, 0x7a, 0xa4, 0x6f, 0x7a, 0x06,
	0xf7, 0xd1, 0x86, 0xf6, 0x84, 0x4a, 0x2e, 0xaf, 0x7c, 0x66, 0x19, 0x3d, 0xd2, 0x37, 0xbc, 0xbc,
	0xc6, 0x2e, 0x74, 0x26, 0x22, 0x18, 0xa7, 0x60, 0x43, 0x81, 0xb3, 0x06, 0x3e, 0x06, 0x0c, 0x94,
	0x06, 0x9d, 0x0c, 0x3f, 0x88, 0x88, 0xc5, 0x72, 0xc8, 0x7d, 0xcb, 0x54, 0x2f, 0x6f, 0x64, 0xc8,
	0x6b, 0x05, 0x9c, 0xfb, 0x78, 0x1f, 0x56, 0x7d, 0x1e, 0xcb, 0x88, 0x8f, 0x14, 0xad, 0xa9, 0x68,
	0x90, 0xb5, 0xce, 0x95, 0x11, 0x3a, 0xd1, 0x46, 0x56, 0x14, 0x9a, 0xd7, 0xb8, 0x0d, 0xcd, 0x40,
	0x48, 0x16, 0x5b, 0xad, 0x1e, 0xe9, 0x77, 0xbc, 0xb4, 0xc0, 0x3d, 0x80, 0x51, 0xc4, 0xa8, 0x64,
	0xfe, 0x90, 0x4a, 0xab, 0xad, 0xa0, 0x8e, 0xee, 0xbc, 0x90, 0xce, 0x14, 0xd6, 0xdf, 0x96, 0x5c,
	0x54, 0x66, 0x47, 0x30, 0x03, 0x3a, 0x4d, 0xe7, 0xee, 0x78, 0xea, 0x37, 0x5a, 0xd0, 0xfa, 0xc4,
	0x2e, 0x63, 0x2e, 0xd3, 0x89, 0x3b, 0x5e, 0x56, 0xce, 0xc9, 0x99, 0xf3, 0x72, 0xbf, 0x08, 0xb4,
	0x5f, 0xe9, 0x71, 0x2a, 0x4a, 0xf5, 0xbb, 0x32, 0x16, 0xec, 0x2a, 0xf3, 0xd5, 0x28, 0xf8, 0xda,
	0x87, 0xb5, 0x29, 0x0d, 0x87, 0x13, 0x31, 0x52, 0x6c, 0xad, 0xbf, 0x3a, 0xa5, 0xe1, 0x1b, 0xdd,
	0x9a, 0x33, 0xd8, 0x9c, 0x37, 0xb8, 0x0f, 0xb7, 0x93, 0x04, 0xc4, 0x67, 0x4c, 0x7a, 0xec, 0xe3,
	0x55, 0xcd, 0x42, 0x9c, 0x53, 0xd8, 0x98, 0x51, 0xe2, 0x50, 0x04, 0x31, 0xc3, 0x03, 0x68, 0x26,
	0xe3, 0xc7, 0x16, 0xe9, 0x35, 0xfa, 0xab, 0xc7, 0xb7, 0x0e, 0x75, 0xe0, 0x0e, 0x13, 0xa6, 0x97,
	0x62, 0xce, 0x6f, 0x02, 0x9b, 0x49, 0xfd, 0x3e, 0x8c, 0x59, 0x94, 0x3f, 0x5f, 0xcc, 0x16, 0x59,
	0x96, 0x2d, 0xe3, 0x66, 0xd9, 0x6a, 0xdc, 0x2c, 0x5b, 0xe6, 0xd2, 0x6c, 0x35, 0x17, 0x65, 0x6b,
	0xa5, 0x90, 0x2d, 0xe7, 0x14, 0xb0, 0x38, 0x8f, 0xde, 0xc5, 0x3e, 0x98, 0x2a, 0x19, 0xc9, 0x30,
	0x95, 0x55, 0x28, 0xc8, 0x79, 0x04, 0xbb, 0xe5, 0xd4, 0x2d, 0xdb, 0xf7, 0x3b, 0xb0, 0xeb, 0xc8,
	0x5a, 0xed, 0x08, 0x5a, 0xe9, 0xec, 0xd9, 0xee, 0xef, 0xe6, 0x82, 0xe5, 0xaf, 0xbc, 0x8c, 0xe7,
	0x3c, 0x80, 0xad, 0x2c, 0x83, 0xcb, 0x74, 0xcf, 0x60, 0xbb, 0x4c, 0xd3, 0x8a, 0x2e, 0x74, 0xb2,
	0xad, 0x65, 0x9a, 0x9b, 0xb9, 0x66, 0xf6, 0x85, 0x37, 0xe3, 0x1c, 0x7f, 0x37, 0x61, 0xfd, 0x65,
	0x8a, 0x5f, 0xb0, 0xe8, 0x9a, 0x8f, 0x18, 0x4a, 0x68, 0x67, 0x19, 0x42, 0xab, 0xb4, 0xa1, 0x82,
	0x23, 0x7b, 0xb7, 0x06, 0x49, 0x4d, 0x38, 0x27, 0x5f, 0xff, 0xfc, 0xfd, 0x61, 0x3c, 0xc1, 0x4d,
	0xf7, 0xfa, 0xc8, 0xd5, 0x2c, 0x57, 0xc5, 0x6c, 0x60, 0xe1, 0x4e, 0xa5, 0xe9, 0x7e, 0xe6, 0xfe,
	0x17, 0x1c, 0x01, 0xcc, 0xee, 0x85, 0x76, 0xe9, 0xf5, 0x52, 0x28, 0xed, 0x7b, 0xb5, 0x98, 0xd6,
	0xee, 0x2a, 0xed, 0x1d, 0xbb, 0xaa, 0xfd, 0x8c, 0x3c, 0xc4, 0x9f, 0x04, 0xb0, 0x7a, 0x2f, 0x74,
	0x16, 0x9c, 0xa5, 0x38, 0xef, 0xc1, 0x52, 0x8e, 0x56, 0x3f, 0x55, 0xea, 0x47, 0xb8, 0x55, 0x54,
	0xd7, 0xa7, 0x1d, 0xd8, 0x68, 0xd5, 0xb4, 0xd3, 0xe9, 0xbf, 0x11, 0x58, 0x2b, 0x1e, 0x14, 0xbb,
	0x95, 0xab, 0x15, 0xcd, 0xec, 0x2d, 0x40, 0xb5, 0x8d, 0xe7, 0xca, 0xc6, 0x53, 0xbc, 0x53, 0xd4,
	0xcb, 0x6f, 0x3e, 0xe8, 0xa2, 0x5d, 0x0b, 0x28, 0x2b, 0x97, 0x2b, 0xea, 0xff, 0xe6, 0xe4, 0x7f,
	0x00, 0x00, 0x00, 0xff, 0xff, 0x2a, 0xa2, 0xdc, 0xcf, 0xac, 0x06, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// CampingServiceClient is the client API for CampingService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CampingServiceClient interface {
	SitesGet(ctx context.Context, in *SitesGetRequest, opts ...grpc.CallOption) (*SitesGetResponse, error)
	SiteUpsert(ctx context.Context, in *SiteUpsertRequest, opts ...grpc.CallOption) (*SiteUpsertResponse, error)
	NationalForestsGet(ctx context.Context, in *NationalForestsGetRequest, opts ...grpc.CallOption) (*NationalForestsGetResponse, error)
	DistrictsGet(ctx context.Context, in *DistrictsGetRequest, opts ...grpc.CallOption) (*DistrictsGetResponse, error)
}

type campingServiceClient struct {
	cc *grpc.ClientConn
}

func NewCampingServiceClient(cc *grpc.ClientConn) CampingServiceClient {
	return &campingServiceClient{cc}
}

func (c *campingServiceClient) SitesGet(ctx context.Context, in *SitesGetRequest, opts ...grpc.CallOption) (*SitesGetResponse, error) {
	out := new(SitesGetResponse)
	err := c.cc.Invoke(ctx, "/camping.CampingService/SitesGet", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *campingServiceClient) SiteUpsert(ctx context.Context, in *SiteUpsertRequest, opts ...grpc.CallOption) (*SiteUpsertResponse, error) {
	out := new(SiteUpsertResponse)
	err := c.cc.Invoke(ctx, "/camping.CampingService/SiteUpsert", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *campingServiceClient) NationalForestsGet(ctx context.Context, in *NationalForestsGetRequest, opts ...grpc.CallOption) (*NationalForestsGetResponse, error) {
	out := new(NationalForestsGetResponse)
	err := c.cc.Invoke(ctx, "/camping.CampingService/NationalForestsGet", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *campingServiceClient) DistrictsGet(ctx context.Context, in *DistrictsGetRequest, opts ...grpc.CallOption) (*DistrictsGetResponse, error) {
	out := new(DistrictsGetResponse)
	err := c.cc.Invoke(ctx, "/camping.CampingService/DistrictsGet", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CampingServiceServer is the server API for CampingService service.
type CampingServiceServer interface {
	SitesGet(context.Context, *SitesGetRequest) (*SitesGetResponse, error)
	SiteUpsert(context.Context, *SiteUpsertRequest) (*SiteUpsertResponse, error)
	NationalForestsGet(context.Context, *NationalForestsGetRequest) (*NationalForestsGetResponse, error)
	DistrictsGet(context.Context, *DistrictsGetRequest) (*DistrictsGetResponse, error)
}

// UnimplementedCampingServiceServer can be embedded to have forward compatible implementations.
type UnimplementedCampingServiceServer struct {
}

func (*UnimplementedCampingServiceServer) SitesGet(ctx context.Context, req *SitesGetRequest) (*SitesGetResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SitesGet not implemented")
}
func (*UnimplementedCampingServiceServer) SiteUpsert(ctx context.Context, req *SiteUpsertRequest) (*SiteUpsertResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SiteUpsert not implemented")
}
func (*UnimplementedCampingServiceServer) NationalForestsGet(ctx context.Context, req *NationalForestsGetRequest) (*NationalForestsGetResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method NationalForestsGet not implemented")
}
func (*UnimplementedCampingServiceServer) DistrictsGet(ctx context.Context, req *DistrictsGetRequest) (*DistrictsGetResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DistrictsGet not implemented")
}

func RegisterCampingServiceServer(s *grpc.Server, srv CampingServiceServer) {
	s.RegisterService(&_CampingService_serviceDesc, srv)
}

func _CampingService_SitesGet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SitesGetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CampingServiceServer).SitesGet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/camping.CampingService/SitesGet",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CampingServiceServer).SitesGet(ctx, req.(*SitesGetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CampingService_SiteUpsert_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SiteUpsertRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CampingServiceServer).SiteUpsert(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/camping.CampingService/SiteUpsert",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CampingServiceServer).SiteUpsert(ctx, req.(*SiteUpsertRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CampingService_NationalForestsGet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NationalForestsGetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CampingServiceServer).NationalForestsGet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/camping.CampingService/NationalForestsGet",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CampingServiceServer).NationalForestsGet(ctx, req.(*NationalForestsGetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CampingService_DistrictsGet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DistrictsGetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CampingServiceServer).DistrictsGet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/camping.CampingService/DistrictsGet",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CampingServiceServer).DistrictsGet(ctx, req.(*DistrictsGetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _CampingService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "camping.CampingService",
	HandlerType: (*CampingServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SitesGet",
			Handler:    _CampingService_SitesGet_Handler,
		},
		{
			MethodName: "SiteUpsert",
			Handler:    _CampingService_SiteUpsert_Handler,
		},
		{
			MethodName: "NationalForestsGet",
			Handler:    _CampingService_NationalForestsGet_Handler,
		},
		{
			MethodName: "DistrictsGet",
			Handler:    _CampingService_DistrictsGet_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "go/proto/api.proto",
}
